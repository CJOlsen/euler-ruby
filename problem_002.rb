#!/usr/bin/env ruby

# Project Euler
# Problem 2
# Author: Christopher Olsen


# Each new term in the Fibonacci sequence is generated by adding the previous 
# two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed 
# four million, find the sum of the even-valued terms.

require 'benchmark'

def problem2()
  total = 0
  smaller = 1
  larger = 2
  # step through the fibonacci seq and sum members evenly divisible by 2
  while larger < 4000000
    if larger%2 == 0
      total += larger
    end
    temp = smaller
    smaller = larger
    larger = smaller + temp
  end
  return total
end

print Benchmark.measure { problem2() }
print "The solution is: #{problem2()}\n"

#   0.000000   0.000000   0.000000 (  0.000015)
# The solution is: 4613732

